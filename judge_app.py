# -*- coding: utf-8 -*-
"""judge_app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c0n26yqUWs_FmGS0Hlt1WzZJ3LlhoJ6k
"""

import csv
from urllib.request import urlopen
from bs4 import BeautifulSoup
from google.colab import auth
auth.authenticate_user()

import gspread
from google.auth import default
creds, _ = default()


baseUrl = 'https://hacknc2021.devpost.com/'
subsUrl = baseUrl + '//submissions?page='


def main():
    count = 1
    fieldsList = []
    while True:
        subsObj = BeautifulSoup(urlopen(subsUrl + str(count)), 'html.parser')
        submissions = subsObj.findAll('a', {'class':'block-wrapper-link fade link-to-software'})
        if len(submissions) != 0:
            for submission in submissions:
                subUrl = submission.attrs['href']
                subObj = BeautifulSoup(urlopen(subUrl), 'html.parser')

                title = getTitle(subObj)
                subtitle = getSubtitle(subObj, title)
                members = getMembers(subObj)
                builtWith = getBuiltWith(subObj)
                fieldsList.append([title.get_text().strip(), subtitle.get_text().strip(), members, builtWith])
            count = count + 1
        else:
            break
    exportToGoogleSheets(fieldsList)


def getTitle(subObj):
    title = subObj.find('h1', {'id':'app-title'})
    return title


def getSubtitle(subObj, title):
    subtitle = title.parent.find('p')
    return subtitle

def getMembers(subObj):
  memberList = []
  members = subObj.find('section',{'id':'app-team'}).findAll('a',{'class':'user-profile-link'})
  for member in members:
    memberList.append(member.get_text().strip())
  return memberList


def getBuiltWith(subObj):
    builtWithList = []
    try:
        builtWith = subObj.find('div', {'id':'built-with'}).findAll('span', {'class':'cp-tag'})
        for tool in builtWith:
            builtWithList.append(tool.get_text().strip())
    except:
        print('No Tools Found')
    return builtWithList

def getTrack(subObj):
  track = subObj.find('div',{'class':'panel'}).find('label',{'class':'checkbox','checked':'checked'})



def exportToGoogleSheets(fieldsList):


gc = gspread.authorize(creds)

sh = gc.create('A new spreadsheet')

# Open our new sheet and add some data.
worksheet = gc.open('A new spreadsheet').sheet1
 
i = 0
x = 0
cell_list = worksheet.range('A2:A36')
cell_list2 = worksheet.range('B2:B36')
cell_list3 = worksheet.range('C2:C36')
cell_list4 = worksheet.range('D2:D36')

for cell in cell_list:
    cell.value = fieldsList[i][0]
    i = i+1

for cell in cell_list2:
    cell.value = fieldsList[i][1]
    x = x+1

for cell in cell_list3:
    cell.value = fieldsList[i][2]
    x = x+1

for cell in cell_list4:
    cell.value = fieldsList[i][3]
    x = x+1

worksheet.update_cells(cell_list)
worksheet.update_cells(cell_list2)
worksheet.update_cells(cell_list3)
worksheet.update_cells(cell_list4)

