# -*- coding: utf-8 -*-
"""completed_judgingapp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Te8WylRGt3H0gLJVCSkNbWTKZKvEErRg
"""

# -*- coding: utf-8 -*-
"""judge_app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c0n26yqUWs_FmGS0Hlt1WzZJ3LlhoJ6k
"""

import pandas as pd
import numpy as np
import csv
from urllib.request import urlopen
from bs4 import BeautifulSoup
from google.colab import auth
auth.authenticate_user()
import re

import gspread
from google.auth import default
creds, _ = default()


baseUrl = 'https://mhacks6.devpost.com/'
subsUrl = baseUrl + 'project-gallery?page='

def main():
    count = 1
    fieldsList = []
    while(count < 3):
      subsObj = BeautifulSoup(urlopen(subsUrl + str(count)), 'html.parser')
      submissions = subsObj.find_all('a', {'class':'block-wrapper-link fade link-to-software'})
      if len(submissions) != 0:
            subnum = 0
            for submission in submissions:
                subUrl = submission.attrs['href']
                subObj = BeautifulSoup(urlopen(subUrl), 'html.parser')
                title = getTitle(subObj)
                link = getLink(subObj, subUrl)
                subtitle = getSubtitle(subObj, title)
                members = getMembers(subObj)
                builtWith = getBuiltWith(subObj)
                fieldsList.append([title.get_text().strip(), link.get('href'), subtitle.get_text().strip(), ', '.join(members), ', '.join(builtWith)])
                subnum += 1    
            count = count + 1
    exportToGoogleSheets(fieldsList)


def getTitle(subObj):
    title = subObj.find('h1', {'id':'app-title'})
    return title

def getLink(subObj, subUrl):
    link = subObj.find('a', href=re.compile('https://devpost.com/software/'))
    return link

def getSubtitle(subObj, title):
    subtitle = title.parent.find('p')
    return subtitle

def getMembers(subObj):
  memberList = []
  members = subObj.find('section',{'id':'app-team'}).findAll('a',{'class':'user-profile-link'})
  for member in members:
    memberList.append(member.get_text().strip())
  while ("" in memberList):
    memberList.remove("")
  return memberList


def getBuiltWith(subObj):
    builtWithList = []
    try:
        builtWith = subObj.find('div', {'id':'built-with'}).findAll('span', {'class':'cp-tag'})
        for tool in builtWith:
            builtWithList.append(tool.get_text().strip())
    except:
        print('No Tools Found')
    return builtWithList

def getTrack(subObj):
  track = subObj.find('div',{'class':'panel'}).find('label',{'class':'checkbox','checked':'checked'})


def exportToGoogleSheets(fieldsList):

  gc = gspread.authorize(creds)

  sh = gc.create('Matched Judges')

  # Open our new sheet and add some data.
  worksheet = gc.open('Matched Judges').sheet1
  judges = gc.open('judge_mockup_sheet').sheet1

  judge_name = judges.range('B2:B24')
  judge_pronouns = judges.range('C2:C24')
  judge_sponsor = judges.range('D2:D24')
  judge_industry = judges.range('E2:E24')
  judge_techstack = judges.range('F2:F24')

  
  i = 0
  x = 0
  j = 0
  k = 0
  l = 0
  m = 0
  n = 0
  p = 0
  q = 0
  r = 0
  z = 0


  cell_list = worksheet.range('A2:A35')
  cell_list2 = worksheet.range('B2:B35')
  cell_list3 = worksheet.range('C2:C35')
  cell_list4 = worksheet.range('D2:D35')
  cell_list5 = worksheet.range('E2:E35')
  cell_list6 = worksheet.range('F2:F35')
  cell_list7 = worksheet.range('G2:G35')
  cell_list8 = worksheet.range('H2:H35')
  cell_list9 = worksheet.range('I2:I35')

  for cell in cell_list:
      cell.value = fieldsList[i][0]
      i = i+1

  for cell in cell_list2:
      cell.value = fieldsList[x][1]
      x = x+1

  for cell in cell_list3:
     cell.value = fieldsList[j][2]
     j = j+1

  for cell in cell_list4:
      cell.value = fieldsList[k][3]
      k = k+1

  for cell in cell_list5:
      cell.value = fieldsList[l][4]
      l = l+1

  df = pd.read_csv("data.csv", usecols = ['sponsors','category'], encoding="latin-1")
  df['sponsors'] = df['sponsors'].fillna('N/A')
  df['category'] = df['category'].fillna('Miscellaneous')

  for cell in cell_list6:
    cell.value = df['category'][m]
    m = m + 1
 
  #judge sorting

  mega_list = []
  #dfr = pd.DataFrame(mega_list)
  unsponsored_judges = []
 
  while(r < len(judge_sponsor)):
    if(judge_sponsor[r].value == "" or judge_sponsor[r].value == "N/A"):
      unsponsored_judges.append(judge_name[r].value)
    r += 1


  for cell in cell_list7:
    cell.value = df['sponsors'][n]
    n = n + 1
    i = 0
    judge_count = 0
    judge_list = []
    while((i < len(judge_sponsor)) and (judge_count < 3)):
      if (judge_sponsor[i].value in cell.value and judge_sponsor[i].value != "N/A"):
        judge_list.append(judge_name[i].value) 
        judge_count += 1
      i += 1
    while len(judge_list) < 3:
      judge_list.append(unsponsored_judges[z])
      if z == len(unsponsored_judges)-1:
        z = 0
      else: z += 1
    mega_list.append(', '.join(judge_list))
    
   
  for cell in cell_list8:
    cell.value = mega_list[p]
    p += 1




  #create dictionary with keys as subjects and lists of judges as value
  worksheet.update_cells(cell_list)
  worksheet.update_cells(cell_list2)
  worksheet.update_cells(cell_list3)
  worksheet.update_cells(cell_list4)
  worksheet.update_cells(cell_list5)
  worksheet.update_cells(cell_list6)
  worksheet.update_cells(cell_list7)
  worksheet.update_cells(cell_list8)

main()

from google.colab import drive
drive.mount('/content/drive')